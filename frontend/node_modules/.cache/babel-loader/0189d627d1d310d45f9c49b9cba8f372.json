{"ast":null,"code":"import API from \"../../API\";\nimport { signInAction, signOutAction, signUpAction } from \"./actions\";\n/*****learn about parse */\n\nconst api = new API();\nconst LOGIN_USER_KEY = \"LOGIN_USER_KEY\";\nexport const fetchUserFromLocalStorage = () => {\n  return async dispatch => {\n    const userJASON = localStorage.getItem(LOGIN_USER_KEY);\n\n    if (userJASON && userJASON.token !== \"\") {\n      dispatch(signInAction(JSON.parse(userJASON)));\n    }\n  };\n};\nexport const signUp = (user_name, email, password) => {\n  return async dispatch => {\n    if (user_name === \"\" || email === \"\" || password === \"\") {\n      alert(\"Please fill out all the fields\");\n      return false;\n    }\n    /*************learn about .then method */\n\n\n    return api.signUp(user_name, email, password).then(user => {\n      dispatch(signUpAction(user));\n      localStorage.setItem(LOGIN_USER_KEY, JSON.stringify(user)); // dispatch(push(\"/\"))\n    }).catch(error => {\n      alert(\"failed to connect API to signup user \");\n    });\n  };\n};\nexport const signIn = (email, password) => {\n  return async dispatch => {\n    if (email === \"\" || password === \"\") {\n      alert(\"Please fill out all the fields\");\n      return false;\n    }\n\n    return api.signIn(email, password).then(user => {\n      dispatch(signInAction(user));\n      localStorage.setItem(LOGIN_USER_KEY, JSON.stringify(user)); // dispatch(push(\"/\"))\n    }).catch(error => {\n      alert(\"failed to connect API to signin user \");\n    });\n  };\n};\nexport const signOut = () => {\n  return async dispatch => {\n    dispatch(signOutAction());\n    localStorage.removeItem(LOGIN_USER_KEY); // dispatch(push(\"/signin\"))\n  };\n};","map":{"version":3,"names":["API","signInAction","signOutAction","signUpAction","api","LOGIN_USER_KEY","fetchUserFromLocalStorage","dispatch","userJASON","localStorage","getItem","token","JSON","parse","signUp","user_name","email","password","alert","then","user","setItem","stringify","catch","error","signIn","signOut","removeItem"],"sources":["/Users/musubimanagement/Desktop/Push _projects/Pizzaria-main/frontend/src/reducks/users/operations.js"],"sourcesContent":["import API from \"../../API\";\nimport { signInAction, signOutAction, signUpAction } from \"./actions\";\n\n/*****learn about parse */\nconst api=new API()\nconst LOGIN_USER_KEY = \"LOGIN_USER_KEY\"\n\nexport const fetchUserFromLocalStorage = () => {\n    return async(dispatch)=>{\n        const userJASON = localStorage.getItem(LOGIN_USER_KEY)\n        if (userJASON && userJASON.token !== \"\"){\n            dispatch(signInAction(JSON.parse(userJASON)))\n        }\n    }\n\n}\n\nexport const signUp = (user_name,email,password)=>{\n    return async(dispatch)=>{\n        if (user_name === \"\" || email === \"\" || password ===\"\"){\n            alert(\"Please fill out all the fields\")\n            return false\n        }\n/*************learn about .then method */\n        return api.signUp(user_name,email,password)\n        .then((user) => {\n            dispatch(signUpAction(user))\n            localStorage.setItem(LOGIN_USER_KEY, JSON.stringify(user))\n            // dispatch(push(\"/\"))\n        })\n\n        .catch((error)=>{\n            alert(\"failed to connect API to signup user \")\n        })\n    }\n}\n\nexport const signIn = (email,password)=>{\n    return async(dispatch)=>{\n        if (email === \"\" || password ===\"\"){\n            alert(\"Please fill out all the fields\")\n            return false\n        }\n        return api \n        .signIn(email,password)\n        .then((user) => {\n            dispatch(signInAction(user))\n            localStorage.setItem(LOGIN_USER_KEY, JSON.stringify(user))\n            // dispatch(push(\"/\"))\n        })\n\n        .catch((error)=>{\n            alert(\"failed to connect API to signin user \")\n        })\n    }\n}\n\nexport const signOut = ()=>{\n    return async(dispatch)=>{\n        dispatch(signOutAction())\n        localStorage.removeItem(LOGIN_USER_KEY)\n        // dispatch(push(\"/signin\"))\n    }\n}"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,WAAhB;AACA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,YAAtC,QAA0D,WAA1D;AAEA;;AACA,MAAMC,GAAG,GAAC,IAAIJ,GAAJ,EAAV;AACA,MAAMK,cAAc,GAAG,gBAAvB;AAEA,OAAO,MAAMC,yBAAyB,GAAG,MAAM;EAC3C,OAAO,MAAMC,QAAN,IAAiB;IACpB,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqBL,cAArB,CAAlB;;IACA,IAAIG,SAAS,IAAIA,SAAS,CAACG,KAAV,KAAoB,EAArC,EAAwC;MACpCJ,QAAQ,CAACN,YAAY,CAACW,IAAI,CAACC,KAAL,CAAWL,SAAX,CAAD,CAAb,CAAR;IACH;EACJ,CALD;AAOH,CARM;AAUP,OAAO,MAAMM,MAAM,GAAG,CAACC,SAAD,EAAWC,KAAX,EAAiBC,QAAjB,KAA4B;EAC9C,OAAO,MAAMV,QAAN,IAAiB;IACpB,IAAIQ,SAAS,KAAK,EAAd,IAAoBC,KAAK,KAAK,EAA9B,IAAoCC,QAAQ,KAAI,EAApD,EAAuD;MACnDC,KAAK,CAAC,gCAAD,CAAL;MACA,OAAO,KAAP;IACH;IACT;;;IACQ,OAAOd,GAAG,CAACU,MAAJ,CAAWC,SAAX,EAAqBC,KAArB,EAA2BC,QAA3B,EACNE,IADM,CACAC,IAAD,IAAU;MACZb,QAAQ,CAACJ,YAAY,CAACiB,IAAD,CAAb,CAAR;MACAX,YAAY,CAACY,OAAb,CAAqBhB,cAArB,EAAqCO,IAAI,CAACU,SAAL,CAAeF,IAAf,CAArC,EAFY,CAGZ;IACH,CALM,EAONG,KAPM,CAOCC,KAAD,IAAS;MACZN,KAAK,CAAC,uCAAD,CAAL;IACH,CATM,CAAP;EAUH,CAhBD;AAiBH,CAlBM;AAoBP,OAAO,MAAMO,MAAM,GAAG,CAACT,KAAD,EAAOC,QAAP,KAAkB;EACpC,OAAO,MAAMV,QAAN,IAAiB;IACpB,IAAIS,KAAK,KAAK,EAAV,IAAgBC,QAAQ,KAAI,EAAhC,EAAmC;MAC/BC,KAAK,CAAC,gCAAD,CAAL;MACA,OAAO,KAAP;IACH;;IACD,OAAOd,GAAG,CACTqB,MADM,CACCT,KADD,EACOC,QADP,EAENE,IAFM,CAEAC,IAAD,IAAU;MACZb,QAAQ,CAACN,YAAY,CAACmB,IAAD,CAAb,CAAR;MACAX,YAAY,CAACY,OAAb,CAAqBhB,cAArB,EAAqCO,IAAI,CAACU,SAAL,CAAeF,IAAf,CAArC,EAFY,CAGZ;IACH,CANM,EAQNG,KARM,CAQCC,KAAD,IAAS;MACZN,KAAK,CAAC,uCAAD,CAAL;IACH,CAVM,CAAP;EAWH,CAhBD;AAiBH,CAlBM;AAoBP,OAAO,MAAMQ,OAAO,GAAG,MAAI;EACvB,OAAO,MAAMnB,QAAN,IAAiB;IACpBA,QAAQ,CAACL,aAAa,EAAd,CAAR;IACAO,YAAY,CAACkB,UAAb,CAAwBtB,cAAxB,EAFoB,CAGpB;EACH,CAJD;AAKH,CANM"},"metadata":{},"sourceType":"module"}