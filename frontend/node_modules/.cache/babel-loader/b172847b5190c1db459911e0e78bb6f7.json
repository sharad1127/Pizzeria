{"ast":null,"code":"import API from \"../../API\";\nimport { fetchCartAction, addCartAction, increaseCartAction, decreaseCartAction } from \"./actions\";\nconst api = new API();\nexport const fetchCart = () => {\n  return async dispatch => {\n    return api.getCart().then(carts => {\n      const subtotal = calculateSubtotal(carts.results);\n      dispatch(fetchCartAction(carts, subtotal));\n    }).catch(error => {\n      alert(\"Failed to connect API carts\");\n    });\n  };\n};\nexport const addCart = item => {\n  return async (dispatch, getState) => {\n    return api.addCart(item.id).then(addedCart => {\n      let prevCart = getState().carts.list;\n      let count = getState().carts.count + 1;\n      addedCart[\"item\"] = item;\n      prevCart.push(addedCart);\n      const subtotal = calculateSubtotal(prevCart);\n      dispatch(addCartAction(prevCart, subtotal, count));\n    }).catch(error => {\n      alert(\"Failed to connect API carts\");\n    });\n  };\n};\nexport const increaseCart = cartItem => {\n  return async (dispatch, getState) => {\n    let prevCart = getState().carts.list;\n    let matchCart = prevCart.filter(cart => cart.id === cartItem);\n    let newCount = matchCart[0].quantity + 1;\n    let count = getState().carts.count;\n    return api.updateCart(cartItem, newCount).then(newCart => {\n      prevCart = prevCart.filter(cart => cart.id !== cartItem);\n      prevCart.push(newCart);\n      const subtotal = calculateSubtotal(prevCart);\n      dispatch(increaseCartAction(prevCart, subtotal, count));\n    }).catch(error => {\n      alert(\"Failed to connect API carts\");\n    });\n  };\n};\nexport const decreaseCart = cartItem => {\n  return async (dispatch, getState) => {\n    let prevCart = getState().carts.list;\n    let matchCart = prevCart.filter(cart => cart.id === cartItem);\n    let newCount = matchCart[0].quantity - 1;\n    let count = getState().carts.count;\n\n    if (newCount > 0) {\n      return api.updateCart(cartItem, newCount).then(newCart => {\n        prevCart = prevCart.filter(cart => cart.id !== cartItem);\n        prevCart.push(newCart);\n        const subtotal = calculateSubtotal(prevCart);\n        dispatch(decreaseCartAction(prevCart, subtotal, count));\n      }).catch(error => {\n        alert(\"Failed to connect API carts\");\n      });\n    } else {\n      return api.deleteCart(cartItem).then(() => {\n        prevCart = prevCart.filter(cart => cart.id !== cartItem);\n        const subtotal = calculateSubtotal(prevCart);\n        count = count - 1;\n        dispatch(decreaseCartAction(prevCart, subtotal, count));\n      }).catch(error => {\n        alert(\"Failed to connect API carts\");\n      });\n    }\n  };\n};\n\nconst calculateSubtotal = cart => {\n  let subtotal = 0;\n\n  for (let pizzaItem in cart) {\n    subtotal += Number(cart[pizzaItem].item.price * cart[pizzaItem].quantity);\n  }\n\n  return subtotal;\n};","map":{"version":3,"names":["API","fetchCartAction","addCartAction","increaseCartAction","decreaseCartAction","api","fetchCart","dispatch","getCart","then","carts","subtotal","calculateSubtotal","results","catch","error","alert","addCart","item","getState","id","addedCart","prevCart","list","count","push","increaseCart","cartItem","matchCart","filter","cart","newCount","quantity","updateCart","newCart","decreaseCart","deleteCart","pizzaItem","Number","price"],"sources":["/Users/musubimanagement/Desktop/Push _projects/Pizzaria-main/frontend/src/reducks/carts/operations.js"],"sourcesContent":["import API from \"../../API\"\nimport { fetchCartAction,addCartAction,increaseCartAction,decreaseCartAction } from \"./actions\"\n\n\n\nconst api = new API()\nexport const fetchCart = () =>{\n    return async dispatch=>{\n        return api\n        .getCart()\n        .then((carts) => {\n            const subtotal = calculateSubtotal(carts.results)\n            dispatch(fetchCartAction(carts,subtotal))\n        })   \n        .catch((error) => {\n            alert(\"Failed to connect API carts\")\n        })\n    }}\n\n\nexport const addCart = (item) =>{\n        return async (dispatch, getState)=>{\n            return api\n            .addCart(item.id)\n            .then((addedCart) => {\n                let prevCart = getState().carts.list\n                let count = getState().carts.count+1\n                addedCart[\"item\"]=item\n                prevCart.push(addedCart)\n                const subtotal = calculateSubtotal(prevCart)\n                dispatch(addCartAction(prevCart,subtotal, count))\n            })   \n            .catch((error) => {\n                alert(\"Failed to connect API carts\")\n            })\n            \n    }} \n\n\n    export const increaseCart = (cartItem) =>{\n        return async (dispatch, getState)=>{\n            let prevCart = getState().carts.list\n            let matchCart = prevCart.filter((cart)=> cart.id === cartItem)\n            let newCount = matchCart[0].quantity +1\n            let count = getState().carts.count\n            return api\n            .updateCart(cartItem,newCount)\n            .then((newCart) => {\n                prevCart=prevCart.filter((cart) => cart.id !== cartItem)\n                prevCart.push(newCart)\n                const subtotal = calculateSubtotal(prevCart)\n                dispatch(increaseCartAction(prevCart,subtotal, count))\n            })   \n            .catch((error) => {\n                alert(\"Failed to connect API carts\")\n            })\n    }} \n\n\n\n    export const decreaseCart = (cartItem) =>{\n        return async (dispatch, getState)=>{\n            let prevCart = getState().carts.list\n            let matchCart = prevCart.filter((cart)=> cart.id === cartItem)\n            let newCount = matchCart[0].quantity -1\n            let count = getState().carts.count\n            if (newCount > 0) {\n                return api\n            .updateCart(cartItem,newCount)\n            .then((newCart) => {\n                prevCart=prevCart.filter((cart) => cart.id !== cartItem)\n                prevCart.push(newCart)\n                const subtotal = calculateSubtotal(prevCart)\n                dispatch(decreaseCartAction(prevCart,subtotal, count))\n            })   \n            .catch((error) => {\n                alert(\"Failed to connect API carts\")\n            })\n            }else{\n                return api\n            .deleteCart(cartItem)\n            .then(() => {\n                prevCart=prevCart.filter((cart) => cart.id !== cartItem)\n                const subtotal = calculateSubtotal(prevCart)\n                count = count-1\n                dispatch(decreaseCartAction(prevCart,subtotal,count))\n            })   \n            .catch((error) => {\n                alert(\"Failed to connect API carts\")\n            })\n            }\n            \n    }} \n\n    const calculateSubtotal = (cart) =>{\n        let subtotal=0\n        for(let pizzaItem in cart){\n            subtotal += Number(cart[pizzaItem].item.price * cart[pizzaItem].quantity)\n\n    \n        }\n        return subtotal\n    }\n        \n\n        "],"mappings":"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"},"metadata":{},"sourceType":"module"}